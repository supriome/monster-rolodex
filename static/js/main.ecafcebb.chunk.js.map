{"version":3,"sources":["components/card/index.jsx","components/card-list/index.jsx","components/search-box/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","data","className","src","id","alt","name","CardList","lists","length","map","list","index","SearchBox","handleChange","value","placeholder","type","onChange","App","useState","cont","setCont","search","setSearch","useEffect","fetch","then","res","json","user","catch","err","console","error","filterVal","filter","item","toLowerCase","includes","e","preventDefault","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAGaA,G,YAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,qBAAIC,UAAU,iBAAd,UACI,qBAAKC,IAAG,+BAA0BF,EAAKG,GAA/B,0BAA2DC,IAAI,KACvE,6BAAKJ,EAAKK,SAFsBL,EAAKG,MCAhCG,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACpB,oBAAIN,UAAU,QAAd,WACOM,GAASA,EAAMC,OAAS,GAAKD,EAAME,KAAI,SAACC,EAAMC,GAAP,OACtC,cAAC,EAAD,CAAMX,KAAMU,GAAWC,SCHtBC,G,MAAY,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,MAA8B,IAAvBC,mBAAuB,MAAT,GAAS,EACnE,OACI,uBAAOd,UAAU,SAASe,KAAK,OAAOD,YAAaA,EAAaD,MAAOA,EAAOG,SAAUJ,M,MCgCjFK,MAjCf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,KAMbC,qBAAU,WAMR,OALAC,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIR,EAAQQ,MACrBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,MAErB,eACN,IAEH,IAKMG,EAAYd,EAAKe,QAAO,SAACC,GAAD,OAAUA,EAAK/B,KAAKgC,cAAcC,SAAShB,EAAOe,kBAGhF,OACE,sBAAKpC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWY,aAXM,SAAA0B,GACnBA,EAAEC,iBACFjB,EAAUgB,EAAEE,OAAO3B,QASsBC,YAAY,iBAAiBD,MAAOQ,IAC3E,cAAC,EAAD,CAAWf,MAAO2B,QCpBTQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ecafcebb.chunk.js","sourcesContent":["import React from 'react'\nimport \"./index.css\"\n\nexport const Card = ({ data }) => (\n    <li className=\"card-container\" key={data.id}>\n        <img src={`https://robohash.org/${data.id}?set=set2&size=180x180`} alt=\"\"/>\n        <h1>{data.name}</h1>\n    </li>\n)","import React from 'react'\nimport \"./index.css\"\nimport { Card } from \"../card\";\n\nexport const CardList = ({ lists }) => (\n    <ul className=\"lists\">\n        {!!lists && lists.length > 0 && lists.map((list, index) => (\n            <Card data={list} key={index} />\n        ))}\n    </ul>\n)","import React from 'react'\n\nimport \"./index.css\"\n\nexport const SearchBox = ({handleChange, value, placeholder = \"\" }) => {\n    return (\n        <input className=\"search\" type=\"text\" placeholder={placeholder} value={value} onChange={handleChange} />\n    )\n}","import React, { useEffect, useState } from 'react'\nimport { CardList } from \"./components/card-list\";\nimport { SearchBox } from \"./components/search-box\";\nimport './App.css';\n\nfunction App() {\n  const [cont, setCont] = useState([])\n  const [search, setSearch] = useState(\"\")\n\n  \n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(user => setCont(user))\n    .catch(err => console.error(err))\n\n    return () => {}\n  }, [])\n\n  const handleChange = e => {\n    e.preventDefault();\n    setSearch(e.target.value)\n  }\n\n  const filterVal = cont.filter((item) => item.name.toLowerCase().includes(search.toLowerCase()))\n\n\n  return (\n    <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox handleChange={handleChange} placeholder=\"search monster\" value={search} />\n      <CardList  lists={filterVal} />\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}